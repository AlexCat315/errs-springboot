<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.x.backend.mapper.user.GameMapper">


    <resultMap id="Game" type="com.x.backend.pojo.common.Game">
        <id property="id" column="id"/>
        <result property="gameName" column="game_name"/>
        <result property="gameScore" column="game_score"/>
        <result property="gameDeveloper" column="game_developer"/>
        <result property="releaseDate" column="release_date" jdbcType="DATE"/>
        <result property="gameDescription" column="game_description"/>
        <result property="gameCategories" column="game_categories" jdbcType="VARCHAR"/>
        <result property="gamePlatforms" column="game_platforms" jdbcType="VARCHAR"/>
        <result property="gameImageUrl" column="game_image_url"/>
        <result property="gameUsers" column="game_users" jdbcType="INTEGER"/>
    </resultMap>
    <insert id="insertRantingComment">
        insert into game_comments (game_id, user_id, comment, comment_date)
        values (#{id}, #{userID}, #{comment}, #{date})
    </insert>

    <update id="updateRanting">
        update games
        set game_score = (game_score * game_users + #{score}) / (game_users + 1),
            game_users = game_users + 1
        where id = #{id}
    </update>


    <select id="getTop50" resultMap="Game">
        SELECT *
        FROM games
        where game_score > 6
          and game_users > 10000
        ORDER BY (game_score * (game_score / 10) * game_users) -
                 ((10 - game_score) * ((10 - game_score) / 10) * game_users) DESC
        LIMIT #{offset}, #{size}
    </select>
    <select id="getHighestRated" resultMap="Game">
        SELECT *
        FROM games
        where game_score > 6
          and game_users > 10000
        ORDER BY game_score DESC
        LIMIT #{offset}, #{size}
    </select>

    <select id="getMostReviewed" resultMap="Game">
        SELECT *
        FROM games
        where game_score > 6
          and game_users > 10000
        ORDER BY (game_score * game_users) - ((10 - game_score) * game_users) DESC
        LIMIT #{offset}, #{size}
    </select>

</mapper>