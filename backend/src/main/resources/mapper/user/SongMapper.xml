<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.x.backend.mapper.user.SongMapper">

    <resultMap id="SongResultMap" type="com.x.backend.pojo.common.Song">
        <id property="id" column="id"/>
        <result property="artist" column="artist"/>
        <result property="coverUrl" column="cover_url"/>
        <result property="audioUrl" column="audio_url"/>
        <result property="score" column="score"/>
        <result property="tags" column="tags"/>
        <result property="users" column="users"/>
        <result property="likeUsers" column="like_users" />
        <result property="dontLikeUsers" column="dont_like_users" />
    </resultMap>
    <insert id="insertSongScoreUser">
        insert into song_like (song_id, account_id) values (#{songId}, #{accountId})
    </insert>

    <update id="updateSongScoreUsers">
        UPDATE song
        SET score = (score * users + 10 ) / (song.users + 1),
            users = users + 1,
            like_users = like_users + 1
        WHERE id = #{songId}
    </update>

    <delete id="deleteSongScoreUsers">
        UPDATE song
        SET score = (score * users - 10 ) / (song.users - 1),
            users = users - 1,
            like_users = like_users - 1
        WHERE id = #{songId}
    </delete>
    <delete id="deleteSongScoreUser">
        DELETE FROM song_like WHERE song_id = #{songId} AND account_id = #{accountId}
    </delete>


    <select id="selectAll" resultMap="SongResultMap">
        SELECT *
        FROM song
        ORDER BY score DESC
        LIMIT #{start}, #{size}
    </select>

    <select id="selectById" resultMap="SongResultMap">
        SELECT * from song WHERE id = #{id}
    </select>
    <select id="isSongLiked" resultType="java.lang.Integer">
        SELECT COUNT(*) FROM song_like WHERE song_id = #{songId} AND account_id = #{accountId}
    </select>
    <select id="search" resultMap="SongResultMap">
        SELECT * From song
        WHERE artist LIKE CONCAT('%', #{SearchText}, '%')
        OR name LIKE CONCAT('%', #{SearchText}, '%')
        OR score LIKE CONCAT('%', #{SearchText}, '%')
        OR tags LIKE CONCAT('%', #{SearchText}, '%')
        OR users LIKE CONCAT('%', #{SearchText}, '%')
        ORDER BY score DESC
        LIMIT #{start}, #{size}
    </select>

</mapper>