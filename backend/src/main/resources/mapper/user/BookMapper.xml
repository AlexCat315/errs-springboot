<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.x.backend.mapper.user.BookMapper">
    <insert id="insertComment">
        INSERT INTO book_comment (account_id, book_id, comment)
        VALUES (#{userId}, #{bookId}, #{comment})
    </insert>

    <select id="selectTop250BookInfo" resultType="com.x.backend.pojo.common.Book">
        select *
        from book
        where rating > 6
        order by (rating + users / 102400) DESC
            LIMIT #{offset}, #{size}
    </select>
    <select id="selectTop50BookInfo" resultType="com.x.backend.pojo.common.Book">
        select *
        from book
        where rating > 6
          and users > 10000
        order by rating DESC
            LIMIT #{offset}, #{size}
    </select>
    <select id="selectTopWelcomeBookInfo" resultType="com.x.backend.pojo.common.Book">
        select *
        from book
        where rating > 6
        order by users DESC
            LIMIT #{offset}, #{size}
    </select>
    <select id="selectTopHotBookInfo" resultType="com.x.backend.pojo.common.Book">
        SELECT *
        FROM book
        WHERE rating > 6
          AND introduction IS NOT NULL
          AND introduction != ''
        ORDER BY (0.7 * rating + 0.3 * users / 102400) DESC
            LIMIT #{offset}, #{size}
    </select>
    <select id="selectBookDetail" resultType="com.x.backend.pojo.common.Book">
        select *
        from book
        where id = #{id}
    </select>

    <!--  查询用户是否评价过  -->
    <select id="validateScore" resultType="java.lang.Boolean">
        SELECT EXISTS (SELECT 1 FROM book_score WHERE a_id = #{aId} AND b_id = #{bId}) AS is_exist
    </select>
    <select id="searchBook" resultType="com.x.backend.pojo.common.Book">
        SELECT *
        FROM book
        WHERE name LIKE CONCAT('%', #{SearchText}, '%')
           OR author LIKE CONCAT('%', #{SearchText}, '%')
           OR description LIKE CONCAT('%', #{SearchText}, '%')
           OR rating LIKE CONCAT('%', #{SearchText}, '%')
           OR introduction LIKE CONCAT('%', #{SearchText}, '%')
           OR recommend LIKE CONCAT('%', #{SearchText}, '%')
        ORDER BY rating DESC
            LIMIT #{start}, #{size}
    </select>


</mapper>